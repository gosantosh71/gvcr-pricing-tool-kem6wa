{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aksClusterName": {
            "type": "string",
            "metadata": {
                "description": "Name of the AKS cluster"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Azure region where the AKS cluster will be deployed"
            }
        },
        "nodeCount": {
            "type": "int",
            "defaultValue": 3,
            "minValue": 1,
            "maxValue": 100,
            "metadata": {
                "description": "Initial number of nodes in the AKS cluster"
            }
        },
        "nodeSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "VM size for the AKS nodes"
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.24.9",
            "metadata": {
                "description": "Kubernetes version for the AKS cluster"
            }
        },
        "enableAutoScaling": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable auto-scaling for the AKS cluster"
            }
        },
        "minNodeCount": {
            "type": "int",
            "defaultValue": 3,
            "minValue": 1,
            "maxValue": 100,
            "metadata": {
                "description": "Minimum number of nodes when using auto-scaling"
            }
        },
        "maxNodeCount": {
            "type": "int",
            "defaultValue": 10,
            "minValue": 1,
            "maxValue": 100,
            "metadata": {
                "description": "Maximum number of nodes when using auto-scaling"
            }
        },
        "enableAvailabilityZones": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable availability zones for the AKS cluster"
            }
        },
        "networkPlugin": {
            "type": "string",
            "defaultValue": "azure",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin for the AKS cluster (azure or kubenet)"
            }
        },
        "networkPolicy": {
            "type": "string",
            "defaultValue": "azure",
            "allowedValues": [
                "azure",
                "calico"
            ],
            "metadata": {
                "description": "Network policy for the AKS cluster (azure or calico)"
            }
        },
        "vnetSubnetId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource ID of the subnet where the AKS cluster will be deployed"
            }
        },
        "serviceCidr": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "CIDR range for Kubernetes services"
            }
        },
        "dnsServiceIp": {
            "type": "string",
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "IP address for Kubernetes DNS service"
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "defaultValue": "172.17.0.1/16",
            "metadata": {
                "description": "CIDR range for the Docker bridge network"
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable RBAC for the AKS cluster"
            }
        },
        "enablePrivateCluster": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable private cluster for the AKS cluster"
            }
        },
        "enableManagedIdentity": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable managed identity for the AKS cluster"
            }
        },
        "enableAzureMonitor": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable Azure Monitor for the AKS cluster"
            }
        },
        "logAnalyticsWorkspaceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource ID of the Log Analytics workspace for monitoring"
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Resource tags for the AKS cluster"
            }
        }
    },
    "variables": {
        "nodeResourceGroup": "[concat(parameters('aksClusterName'), '-nodes')]",
        "availabilityZones": "[if(parameters('enableAvailabilityZones'), createArray('1', '2', '3'), json('null'))]",
        "autoScalingProfile": {
            "balance-similar-node-groups": "true",
            "expander": "random",
            "max-graceful-termination-sec": "600",
            "max-node-provision-time": "15m",
            "max-unready-nodes": "3",
            "max-unready-percentage": "45",
            "new-pod-scale-up-delay": "0s",
            "scale-down-delay-after-add": "10m",
            "scale-down-delay-after-delete": "10s",
            "scale-down-delay-after-failure": "3m",
            "scale-down-unneeded-time": "10m",
            "scale-down-unready-time": "20m",
            "scale-down-utilization-threshold": "0.5",
            "scan-interval": "10s",
            "skip-nodes-with-local-storage": "true",
            "skip-nodes-with-system-pods": "true"
        },
        "networkProfile": {
            "networkPlugin": "[parameters('networkPlugin')]",
            "networkPolicy": "[parameters('networkPolicy')]",
            "serviceCidr": "[parameters('serviceCidr')]",
            "dnsServiceIP": "[parameters('dnsServiceIp')]",
            "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
            "loadBalancerSku": "standard"
        },
        "addonProfiles": {
            "omsagent": {
                "enabled": "[parameters('enableAzureMonitor')]",
                "config": {
                    "logAnalyticsWorkspaceResourceID": "[parameters('logAnalyticsWorkspaceId')]"
                }
            },
            "azurepolicy": {
                "enabled": true
            },
            "kubeDashboard": {
                "enabled": false
            },
            "ingressApplicationGateway": {
                "enabled": false
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2022-09-01",
            "name": "[parameters('aksClusterName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "identity": {
                "type": "[if(parameters('enableManagedIdentity'), 'SystemAssigned', 'None')]"
            },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "dnsPrefix": "[parameters('aksClusterName')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "nodeResourceGroup": "[variables('nodeResourceGroup')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": "[parameters('nodeCount')]",
                        "vmSize": "[parameters('nodeSize')]",
                        "osType": "Linux",
                        "osDiskSizeGB": 128,
                        "osDiskType": "Managed",
                        "vnetSubnetID": "[if(not(empty(parameters('vnetSubnetId'))), parameters('vnetSubnetId'), json('null'))]",
                        "maxPods": 110,
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": "[variables('availabilityZones')]",
                        "enableAutoScaling": "[parameters('enableAutoScaling')]",
                        "minCount": "[if(parameters('enableAutoScaling'), parameters('minNodeCount'), json('null'))]",
                        "maxCount": "[if(parameters('enableAutoScaling'), parameters('maxNodeCount'), json('null'))]",
                        "enableNodePublicIP": false,
                        "mode": "System",
                        "orchestratorVersion": "[parameters('kubernetesVersion')]",
                        "upgradeSettings": {
                            "maxSurge": "33%"
                        },
                        "nodeTaints": []
                    }
                ],
                "networkProfile": "[variables('networkProfile')]",
                "addonProfiles": "[variables('addonProfiles')]",
                "autoScalerProfile": "[if(parameters('enableAutoScaling'), variables('autoScalingProfile'), json('null'))]",
                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "autoUpgradeProfile": {
                    "upgradeChannel": "stable"
                }
            }
        }
    ],
    "outputs": {
        "aksClusterName": {
            "type": "string",
            "value": "[parameters('aksClusterName')]"
        },
        "aksNodeResourceGroup": {
            "type": "string",
            "value": "[variables('nodeResourceGroup')]"
        },
        "kubeConfig": {
            "type": "securestring",
            "value": "[listClusterAdminCredential(resourceId('Microsoft.ContainerService/managedClusters', parameters('aksClusterName')), '2022-09-01').kubeconfigs[0].value]"
        }
    }
}